---
title: "Clustering results"
format: html
---

{{< include _data.qmd >}}

```{r, warning=FALSE, include=FALSE}
library(tidyverse)
library(here)
library(readxl)
library(ggpubr)
library(ggforce)
library(cowplot)
library(ComplexHeatmap)
library(circlize)

library(survival)
library(survminer)
library(gtsummary)

here::i_am("paper/notebooks/clustering.qmd")
```

```{r}
angio_summarized_comb_tma <- angio_long %>%
  group_by(acc_num, panel, variable) %>%
  summarise(
    value=sum(value)
  ) %>%
  ungroup()

vessel_wide_comb_tma <- angio_summarized_comb_tma %>%
  select(-c(panel)) %>%
  pivot_wider(names_from = "variable", values_from = "value") %>%
  mutate(
    frac_vessel_stroma=area_vessel_mm/(area_stroma_mm+area_vessel_mm),
    frac_vessel_all=area_vessel_mm/(area_stroma_mm+area_vessel_mm+area_tumour_mm)
  )

vessel_df_comb_tma <- vessel_wide_comb_tma %>%
  select(acc_num, frac_vessel_stroma, frac_vessel_all) %>%
  unique
```


```{r}
clinical_annotations_comb_tma <- metatable_full %>%
  select(acc_num, Grade, Histotype, Subtype, Stage) %>%
  unique %>%
  left_join(clust_assignments_map)

her2_status <- her2_ihc %>% 
  select(acc_num, her2_ihc, sWGS) %>%
  dplyr::rename(`HER2 CN`=sWGS, `HER2 IHC`=her2_ihc)

overall_annotations_comb_tma <- clinical_annotations_comb_tma %>%
  left_join(vessel_df_comb_tma) %>%
  left_join(her2_status)
```


```{r, fig.width=10, fig.height=8}
capitalize_names <- function(x) {
  str_to_sentence(x) %>% str_replace_all("mmmt", "MMMT")
}

palette_histotype_capitalized <- palette_histotype
names(palette_histotype_capitalized) <- capitalize_names(names(palette_histotype_capitalized))

mat <- (density_final_input %>% na.omit) %>% scale

col_anno <- (overall_annotations_comb_tma %>% 
               dplyr::rename(Cluster=clust_map,
                      `Vessel density`=frac_vessel_stroma) %>%
               select(-c(frac_vessel_all, count_pct, `HER2 IHC`, `HER2 CN`, `Vessel density`)) %>%
               column_to_rownames("acc_num"))[rownames(mat),]

mat <- mat[which(col_anno$Subtype == "p53abn" & !is.na(col_anno$Cluster)),] %>% scale
mat_onlyserous <- mat[which(col_anno$Subtype == "p53abn" & !is.na(col_anno$Cluster) & col_anno$Histotype == "serous"),] %>% scale

col_anno <- col_anno[rownames(mat),]
col_anno <- col_anno[,!str_detect(colnames(col_anno), "Subtype")] %>%
  dplyr::mutate(
    Histotype = factor(capitalize_names(Histotype), levels = intersect(names(palette_histotype_capitalized), unique(capitalize_names(Histotype))))
  )

col_anno_onlyserous <- col_anno[rownames(mat_onlyserous),] %>%
  dplyr::select(-c(Histotype))

ha <- columnAnnotation(df = col_anno, annotation_width = 0.02, 
                       col = list(
                         Cluster=palette_tilclust,
                         #`Vessel density`=colorRamp2(c(0, 1), c("white", "red")),
                         Cohort=palette_cohort,
                         Grade=palette_grade,
                         Histotype=palette_histotype_capitalized,
                         Stage=palette_stage
                       ))

ha_onlyserous <- columnAnnotation(df = col_anno_onlyserous, annotation_width = 0.02, 
                       col = list(
                         Cluster=palette_tilclust,
                         #`Vessel density`=colorRamp2(c(0, 1), c("white", "red")),
                         Cohort=palette_cohort,
                         Grade=palette_grade,
                         Stage=palette_stage
                       ))

density_heatmap <- Heatmap(mat %>% t,
                           na_col = "gray",
                           column_names_gp = gpar(fontsize = 6), 
                           cluster_rows = TRUE,
                           cluster_columns = TRUE,
                           clustering_method_columns = "ward.D2",
                           clustering_method_rows = "ward.D2",
                           column_names_rot = 60, 
                           show_column_names = FALSE, 
                           column_split = col_anno$Cluster,
                           column_title = NULL,
                           top_annotation = ha,
                           heatmap_legend_param = list(
                             title = "Density"
                           ))

density_heatmap_onlyserous <- Heatmap(mat_onlyserous %>% t,
                           na_col = "gray",
                           column_names_gp = gpar(fontsize = 6), 
                           cluster_rows = TRUE,
                           cluster_columns = TRUE,
                           clustering_method_columns = "ward.D2",
                           clustering_method_rows = "ward.D2",
                           column_names_rot = 60, 
                           show_column_names = FALSE, 
                           column_split = col_anno_onlyserous$Cluster,
                           column_title = NULL,
                           top_annotation = ha_onlyserous,
                           heatmap_legend_param = list(
                             title = "Density"
                           ))


densities_tilclust_plot <-grid::grid.grabExpr(draw(density_heatmap, heatmap_legend_side = "bottom", annotation_legend_side="bottom", legend_grouping = "original", merge_legend = TRUE, align_heatmap_legend = "heatmap_center"), width = 10, height = 8)

densities_tilclust_plot_onlyserous <-grid::grid.grabExpr(draw(density_heatmap_onlyserous, heatmap_legend_side = "bottom", annotation_legend_side="bottom", legend_grouping = "original", merge_legend = TRUE, align_heatmap_legend = "heatmap_center"), width = 8, height = 6)
```


```{r}
# cox_hazards_plot <- ggplot(cox_hazards_renamed, aes(y=variable, group=outcome, colour=outcome)) + 
#   geom_point(aes(x=exp(log.estimate)), position=position_dodge(width=0.5), shape=15, size=3) + 
#   geom_linerange(aes(xmin=exp(log.conf.low), xmax=exp(log.conf.high)), position=position_dodge(width=0.5)) + 
#   theme_pubr() + 
#   geom_vline(xintercept = c(0.1, 0.2, 0.5, 2, 4, 8, 16, 32), linetype = 3) + 
#   geom_vline(xintercept = 1, alpha = 0.7) + 
#   facet_col(~ category, scales = "free_y", space = "free", strip.position = "left") + 
#   theme(strip.placement = "outside", strip.background = element_blank(), strip.text = element_text(face = "bold")) + 
#   ylab("") + 
#   scale_y_discrete(limits = rev) + 
#   scale_colour_manual(values = brewer.pal(4, "Set2")) + 
#   xlab("Hazard ratio") + 
#   scale_x_continuous(trans = "log", breaks = c(0.1, 0.2, 0.5, 1, 2, 4, 8, 16, 32))
```

```{r}
densities_labeled <- densities_final %>%
  inner_join(clinical_annotations_comb_tma) %>%
  filter(
    panel == "B&T",
    Subtype == "p53abn",
    !is.na(clust_map)
  )

densities_cyto <- densities_labeled %>% 
  filter(variable %in% c("tcyto", "tcyto_pd1neg", "tcyto_pd1pos")) %>%
  dplyr::rename(cyto_density=density)

densities_treg <- densities_labeled %>% 
  filter(variable %in% c("treg")) %>%
  dplyr::rename(treg_density=density) %>%
  select(c(acc_num, region, treg_density))

densities_cyto_treg <- densities_cyto %>%
  left_join(densities_treg) %>%
  mutate(cyto_treg_ratio=cyto_density/treg_density) %>%
  filter(area_region_mm > 0.01) %>%
  mutate(region = dplyr::recode(region, "stroma"="Stromal", "tumour"="Epithelial") %>%
           factor(levels = c("Epithelial", "Stromal")))

cd8_treg_pvals <- compare_means(cyto_treg_ratio ~ clust_map, densities_cyto_treg %>% filter(!is.infinite(cyto_treg_ratio)), group.by = c("region"), method = "wilcox.test", p.adjust.method = "holm")

cd8_treg_ratio_plot <- ggplot(densities_cyto_treg %>% filter(cyto_density > 0, treg_density > 0), aes(x=clust_map, y=cyto_treg_ratio)) + 
  geom_boxplot(aes(fill = clust_map), width = 0.5, outlier.size = -1, alpha = 0.4) + 
  geom_point(position = position_jitter(width = 0.1, height = 0), alpha = 0.2) + 
  theme_pubr() + 
  facet_wrap(~ region, ncol = 2) +
  scale_y_log10() + 
  theme(strip.background =element_rect(fill="white"), legend.title = element_text(size = 9),
        legend.text = element_text(size = 8)) +
  stat_pvalue_manual(data = cd8_treg_pvals, label = "p = {scales::pvalue(p.adj)}", y.position = 2, vjust=1.2, size = 3, bracket.size = 0) + 
  scale_fill_manual(values = palette_tilclust) + 
  xlab("") + 
  ylab("CD8/Treg ratio") + 
  labs(fill = "Cluster") + 
  guides(fill = guide_legend(override.aes = list(alpha = 1)))

cluster_legend <- get_legend(cd8_treg_ratio_plot)
```

```{r}
densities_cyto_all <- densities_cyto %>% 
  filter(variable %in% c("tcyto"),
         region == "tumour")

histotype_kd_til_plot <- ggplot(densities_cyto_all %>% dplyr::mutate(Histotype=dplyr::recode(Histotype, "carcinosarcoma (MMMT)"="carcinosarcoma") %>% capitalize_names() %>% factor(levels = c("Carcinosarcoma", "Clear cell", "Endometrioid", "Mixed", "Serous", "Other"))), aes(log_density)) + 
  geom_density() + 
  facet_wrap(~ Histotype, ncol = 1, strip.position = "left") + 
  theme_pubr() + 
  theme(axis.line.y = element_blank(),
        axis.text.y = element_blank(),
        axis.ticks.y = element_blank(),
        axis.text.x = element_text(size = 7),
        axis.title.x = element_text(size = 9),
        plot.title = element_text(size = 11),
        strip.text.y.left = element_text(angle = 0, hjust = 1, size = 9),  strip.background.y = element_blank(), strip.placement = "outside") + 
  xlab("log(Epithelial CD8+ TIL density)") + 
  ylab("")

densities_bottomrow_plot <- plot_grid(histotype_kd_til_plot, cd8_treg_ratio_plot + theme(legend.position = "none"), ncol = 2, rel_widths = c(0.45, 0.55), labels = c("b", "c"))
```

```{r, fig.height = 5, fig.width = 9}
#| label: fig-densities-tilclust
#| fig-cap: "Clusters and association with survival"
#| fig-alt: "Clusters and association with survival"
plot_grid(densities_tilclust_plot)
#plot_grid(densities_tilclust_plot, densities_bottomrow_plot, nrow = 2, ncol = 1, rel_heights = c(0.55, 0.45), labels = c("a", ""))
```

```{r, fig.width=7, fig.height=4}
#| label: fig-kd-histotype
#| fig-cap: "Histotype TIL kernel density plot"
histotype_kd_til_plot
```

```{r, fig.width = 6.5, fig.height = 6}
#| label: suppfig-densities-correlation
density_cormat <- density_final_input %>%
  cor(., method = "pearson")
diag(density_cormat) <- 1

density_hc <- hclust(dist(density_cormat))

density_cormat <- density_cormat[density_hc$order, density_hc$order]

density_hc2 <- hclust(dist(density_cormat))
density_cormat[lower.tri(density_cormat)] <- NA

density_cormat_display <- round(density_cormat, 2)
density_cormat_display[is.na(density_cormat_display)] <- ""

pheatmap::pheatmap(density_cormat, color = colorRampPalette(c("white", "red"))(100), breaks = seq(0, 1, 0.01), na_col = "#FFFFFF", heatmap_legend_param = list(title = "Correlation"), cluster_cols = density_hc2, cluster_rows = FALSE, border_color = NA, display_numbers = density_cormat_display)
```

```{r, fig.width = 6, fig.height = 6}
#| label: suppfig-densities-stage
## Log-rank tests within stage seem to maintain significance; but not as a whole. Is it because TILd is somehow correlated with stage?
ggplot(densities_labeled %>% filter(Subtype == "p53abn", variable %in% c("tcyto", "thelper")), aes(x=Stage, y=log_density)) + 
  geom_boxplot(aes(colour=Stage), outlier.size = -1) + 
  geom_point(position = position_jitter(width = 0.1, height = 0), alpha = 0.2) + 
  theme_pubr() + 
  facet_grid(variable ~ region) + 
  stat_compare_means(comparisons = list(c("I", "II"), c("I", "III"), c("I", "IV")))
```

```{r}
## USE EXISTING FUNCTIONS FOR PLOTTING

cox_tables <- lapply(cox_fits, function(cox_fit) {
  cox_table <- cox_fit %>% tbl_regression(exponentiate = TRUE, show_single_row = c("TIL", "Chemotherapy", "Radiotherapy", "Brachytherapy"), pvalue_fun = function(x) style_pvalue(x, digits = 2))
  
  return(cox_table)
})

cox_tables_merged <- tbl_merge(tbls = cox_tables,
          tab_spanner = c("Overall survival", "Progression-free survival", "Disease-specific survival"))
```

```{r}
#| label: tbl-cox-hazards
#| tbl-cap: "Cox hazards table"
cox_tables_merged %>% as_flex_table()
```

```{r}
cox_tables_tiltype <- lapply(cox_fits_by_tiltype, function(cox_fits_for_surv) {
  cox_tables_for_surv <- lapply(sort(names(cox_fits_for_surv)), function(tiltype) {
    cox_table <- cox_fits_for_surv[[tiltype]] %>% tbl_regression(exponentiate = TRUE, pvalue_fun = function(x) style_pvalue(x, digits = 2), include = tiltype)
    return(cox_table)
  })
  tbl_stack(cox_tables_for_surv)
})

cox_tables_tiltype_merged <- tbl_merge(tbls = cox_tables_tiltype,
          tab_spanner = c("Overall survival", "Progression-free survival", "Disease-specific survival"))
```

```{r}
cox_tables_tiltype_merged %>% as_flex_table()
```

```{r, fig.width = 8, fig.height = 4}
surv_outcome2 <- "dss"
# chemo_row <- plot_grid(km_chemo_fits[[surv_outcome2]][[2]]$plot + ylab("Disease-specific survival"),
#                        km_chemo_fits[[surv_outcome2]][[1]]$plot + ylab("Disease-specific survival"),
#                        ncol = 2, labels = c("f", "g"))
```

```{r, fig.width = 6.7, fig.height = 10}
#| label: fig-km-stage

convert_to_grobable <- function(x) {
  ggarrange(x$plot, x$table, nrow = 2, align = "v", heights = c(0.8, 0.2))
}

surv_outcome <- "os"
km_all_plot <- km_fits[[surv_outcome]]$all$plot
km_all_plot$plot$labels$title <- str_replace(km_all_plot$plot$labels$title, "Stage all", "All patients")
top_plot <- plot_grid(
  convert_to_grobable(km_all_plot),
  convert_to_grobable(km_fits[[surv_outcome]]$I$plot),
  convert_to_grobable(km_fits[[surv_outcome]]$II$plot),
  convert_to_grobable(km_fits[[surv_outcome]]$III$plot),
  convert_to_grobable(km_fits[[surv_outcome]]$IV$plot),
  convert_to_grobable(km_chemo_fits[[surv_outcome2]][[2]]$plot),
  convert_to_grobable(km_chemo_fits[[surv_outcome2]][[1]]$plot),
  histotype_kd_til_plot,
  ncol = 2, labels = c("AUTO"), label_size = 12)

plot_grid(top_plot, cluster_legend, nrow = 2, rel_heights = c(3.0, 0.1))
```

```{r, fig.width = 6.7, fig.height = 10}
surv_outcome <- "os"
p53_km_plot <- plot_grid(
  convert_to_grobable(km_stage_p53_fits[[surv_outcome]]$I$`FALSE`$plot),
  convert_to_grobable(km_stage_p53_fits[[surv_outcome]]$I$`TRUE`$plot),
  convert_to_grobable(km_stage_p53_fits[[surv_outcome]]$II$`FALSE`$plot),
  convert_to_grobable(km_stage_p53_fits[[surv_outcome]]$II$`TRUE`$plot),
  convert_to_grobable(km_stage_p53_fits[[surv_outcome]]$III$`FALSE`$plot),
  convert_to_grobable(km_stage_p53_fits[[surv_outcome]]$III$`TRUE`$plot),
  convert_to_grobable(km_stage_p53_fits[[surv_outcome]]$IV$`FALSE`$plot),
  convert_to_grobable(km_stage_p53_fits[[surv_outcome]]$IV$`TRUE`$plot),
  ncol = 2, labels = c("AUTO"), label_size = 12)
```



```{r}
vessel_clustmap <- vessel_df_comb_tma %>%
  inner_join(clust_assignments_map)

ggplot(vessel_clustmap, aes(x=clust_map, y=frac_vessel_stroma)) + 
  geom_boxplot(aes(fill=clust_map), outlier.size = -1, width = 0.5) + 
  geom_point(position = position_jitter(width = 0.1, height = 0), alpha = 0.2) +
  theme_pubr() +
  stat_compare_means() + 
  scale_fill_manual(values = palette_tilclust)
```


```{r, fig.width = 8, fig.height = 6}
plot_grid(densities_tilclust_plot_onlyserous)
```


```{r}
bt_carcinosarcoma_long_filtered <- bt_carcinosarcoma_long %>% 
  filter(area > 0)

paired_samples <- bt_carcinosarcoma_long_filtered %>%
  dplyr::group_by(acc_num) %>%
  dplyr::summarise(unique_components=length(unique(component))) %>%
  ungroup()

bt_carcinosarcoma_long_filtered_paired <- bt_carcinosarcoma_long_filtered %>%
  filter(acc_num %in% (paired_samples %>% filter(unique_components == 2))$acc_num)

xy_position <- bt_carcinosarcoma_long_filtered %>%
  dplyr::mutate(density = log(density+1)) %>%
  group_by(tiltype) %>%
  rstatix::wilcox_test(density ~ component) %>%
  rstatix::add_xy_position(x = "component") %>%
  ungroup() %>%
  dplyr::select(tiltype, group1, group2, y.position, xmin, xmax)

paired_wilcox_pvals <- compare_means(formula = density ~ component, method = "wilcox.test", paired = TRUE, group.by = "tiltype", data = bt_carcinosarcoma_long_filtered_paired, p.adjust.method = "holm") 
  
unpaired_wilcox_pvals <- compare_means(formula = density ~ component, method = "wilcox.test", paired = FALSE, group.by = "tiltype", data = bt_carcinosarcoma_long_filtered, p.adjust.method = "holm")

all_wilcox_pvals <- paired_wilcox_pvals %>%
  dplyr::left_join(unpaired_wilcox_pvals, by = c("tiltype", ".y.", "group1", "group2")) %>%
  dplyr::left_join(xy_position) %>%
  dplyr::mutate(p.final = paste0("italic(P)[paired]==", p.adj.x, "~~italic(P)[unpaired]==", p.adj.y),
                y.position = y.position + 1,
                xmin=xmin-0.2,
                xmax=xmax-0.2)
```

```{r, fig.width = 6.7, fig.height = 5}
carcinosarcoma_til_densities <- ggplot(bt_carcinosarcoma_long_filtered, aes(x=component, y=log(density+1))) + 
  geom_boxplot(width = 0.5, outlier.size = -1) + 
  geom_point(position = position_jitter(width = 0.2, height = 0), alpha = 0.4) + 
  geom_line(aes(group = acc_num)) + 
  theme_pubr() + 
  stat_pvalue_manual(data = all_wilcox_pvals, label = "p.final", xmin = "xmin", xmax="xmax", y.position = "y.position", vjust=1.2, size = 3, remove.bracket = TRUE, parse = TRUE) + 
  facet_wrap(~ tiltype, scales = "free") + 
  ylab("TIL density (log-transformed)") + 
  xlab("Component") + 
  theme(axis.text = element_text(size = 7),
        axis.title = element_text(size = 9),
        plot.title = element_text(size = 11),
        strip.text = element_text(angle = 0, hjust = 0.5, size = 9, face = "bold"),  strip.background = element_blank(), strip.placement = "outside") + 
  scale_y_continuous(expand = expansion(mult = c(0, 0)))

carcinosarcoma_til_densities
```


```{r}
cox_tables_rb <- lapply(cox_fits_rb, function(cox_fit) {
  cox_table <- cox_fit %>% tbl_regression(exponentiate = TRUE, show_single_row = c("TIL", "RB loss", "Chemotherapy", "Radiotherapy", "Brachytherapy"), pvalue_fun = function(x) style_pvalue(x, digits = 2))
  
  return(cox_table)
})

cox_tables_rb_merged <- tbl_merge(tbls = cox_tables_rb,
          tab_spanner = c("Overall survival", "Progression-free survival", "Disease-specific survival"))
```

```{r}
cox_tables_rb_merged %>% as_flex_table()
```



